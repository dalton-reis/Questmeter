{"version":3,"sources":["webpack:///./src/app/pages/professor-atividade/professor-atividade.module.ts","webpack:///./src/app/pages/professor-atividade/professor-atividade.page.html","webpack:///./src/app/pages/professor-atividade/professor-atividade.page.scss","webpack:///./src/app/pages/professor-atividade/professor-atividade.page.ts","webpack:///./src/app/services/atividade.service.ts"],"names":[],"mappings":"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","file":"pages-professor-atividade-professor-atividade-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ProfessorAtividadePage } from './professor-atividade.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([{ path: '', component: ProfessorAtividadePage}])\n  ],\n  declarations: [ProfessorAtividadePage]\n})\nexport class ProfessorAtividadePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"tertiary\\\">\\n    <ion-title>Atividades</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n    <ion-list-header>\\n     <ion-label color=\\\"primary\\\">Disciplina | Atividade</ion-label> \\n    </ion-list-header>\\n    <ion-item-sliding *ngFor=\\\"let atividade of atividades\\\">\\n      <ion-item lines=\\\"inset\\\" button [routerLink]=\\\"['/professor-atividade-edicao', atividade.id]\\\">\\n        <ion-label>{{ atividade.disciplina }} | {{ atividade.nome }}</ion-label>\\n      </ion-item>\\n      \\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option (click)=\\\"onRemove(atividade.id)\\\" color=\\\"danger\\\">\\n          <ion-label>Apagar</ion-label>\\n        </ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button routerLink=\\\"/professor-atividade-criacao\\\" routerDirection=\\\"forward\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Zlc3Nvci1hdGl2aWRhZGUvcHJvZmVzc29yLWF0aXZpZGFkZS5wYWdlLnNjc3MifQ== */\"","import { AutenticacaoService } from './../../services/autenticacao.service';\nimport { ProfessorService } from './../../services/professor.service';\nimport { AtividadeService } from './../../services/atividade.service';\nimport { IAtividade } from './../../models/atividade';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-professor-atividade',\n  templateUrl: './professor-atividade.page.html',\n  styleUrls: ['./professor-atividade.page.scss'],\n})\nexport class ProfessorAtividadePage implements OnInit {\n\n  atividades: IAtividade[];\n  usuarioCorrente = null;\n\n  constructor(private atividadeService: AtividadeService, \n    private professorService: ProfessorService,\n    private autenticacaoService: AutenticacaoService) { }\n\n  ngOnInit() {\n    this.usuarioCorrente = this.autenticacaoService.getID();\n    this.professorService.getByUsuario(this.usuarioCorrente).then((professor) => {\n      this.atividadeService.getByProfessor(professor[0].id).subscribe((resultado) => {\n        this.atividades = resultado;\n      });\n    });\n  }\n\n  onRemove(id: string) {\n    this.atividadeService.remove(id);\n  }\n}\n","import { IAtividade } from './../models/atividade';\nimport { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AtividadeService {\n\n  private collectionAtividades: AngularFirestoreCollection<IAtividade>;\n  private listAtividades: Observable<IAtividade[]>;\n\n  constructor(private db: AngularFirestore) { \n    this.collectionAtividades = db.collection<IAtividade>('atividades');\n    this.listAtividades = this.collectionAtividades.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getAll() {\n    return this.listAtividades;\n  }\n\n  get(id: string) {\n    return this.collectionAtividades.doc<IAtividade>(id).valueChanges();\n  }\n\n  //modificar: pegar a atividade que o aluno pertence\n  getByCodigo(codigo: string) {\n    return new Promise(resolve => {\n      this.db.collection<IAtividade>('atividades', ref => ref.where('codigo', '==', codigo)).\n      snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })).subscribe((data:any) => {\n          resolve(data);\n      });\n    });\n  }\n\n  getByProfessor(professor: string) {\n    return this.db.collection<IAtividade>\n    ('atividades', ref => ref.where('professor', '==', professor).orderBy(\"disciplina\").orderBy(\"nome\")).\n      snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n    }));\n  }\n\n  getByProfessorOrdenaPorData(professor: string) {\n    return this.db.collection<IAtividade>\n    ('atividades', ref => ref.where('professor', '==', professor).orderBy(\"dataCriacao\", \"desc\")).\n      snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n    }));\n  }\n\n  add(atividade: IAtividade) {\n    return this.collectionAtividades.add(atividade);\n  }\n\n  update(id: string, atividade: IAtividade) {\n    return this.collectionAtividades.doc(id).update(atividade);\n  }\n\n  remove(id: string) {\n    return this.collectionAtividades.doc(id).delete();\n  }\n}\n"],"sourceRoot":""}