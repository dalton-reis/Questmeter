{"version":3,"sources":["webpack:///./src/app/pages/professor-questao-edicao/professor-questao-edicao.module.ts","webpack:///./src/app/pages/professor-questao-edicao/professor-questao-edicao.page.html","webpack:///./src/app/pages/professor-questao-edicao/professor-questao-edicao.page.scss","webpack:///./src/app/pages/professor-questao-edicao/professor-questao-edicao.page.ts","webpack:///./src/app/services/questao.service.ts","webpack:///./src/app/services/resposta.service.ts"],"names":[],"mappings":"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","file":"pages-professor-questao-edicao-professor-questao-edicao-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfessorQuestaoEdicaoPage } from './professor-questao-edicao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfessorQuestaoEdicaoPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProfessorQuestaoEdicaoPage]\n})\nexport class ProfessorQuestaoEdicaoPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"tertiary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button [defaultHref]=\\\"['/professor-atividade-edicao/', questao.atividade]\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Questão</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  \\n  <div padding>\\n    <ion-segment [(ngModel)]=\\\"segmentQuestao\\\" mode=\\\"ios\\\">\\n      <ion-segment-button value=\\\"edicao\\\">\\n        <ion-label>Informações</ion-label>\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"respostas\\\">\\n        <ion-label>Respostas</ion-label>\\n      </ion-segment-button>\\n    </ion-segment>\\n  </div>\\n  \\n  <div [ngSwitch]=\\\"segmentQuestao\\\">\\n    \\n    <div *ngSwitchCase=\\\"'edicao'\\\">\\n      <ion-list lines=\\\"full\\\">\\n        <ion-item *ngIf=\\\"questao\\\">\\n          <ion-label position=\\\"stacked\\\">Apelido</ion-label>\\n          <ion-input required type=\\\"text\\\" max-length=\\\"10\\\" [(ngModel)]=\\\"questao.apelido\\\"></ion-input>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"questao\\\">\\n          <ion-label position=\\\"stacked\\\">Problema/Desafio</ion-label>\\n          <ion-textarea required rows=\\\"4\\\" [(ngModel)]=\\\"questao.problema\\\"></ion-textarea>\\n        </ion-item>\\n      </ion-list>\\n      <ion-button expand=\\\"full\\\" (click)=\\\"save()\\\">Salvar</ion-button>\\n    </div>\\n    \\n    <div *ngSwitchCase=\\\"'respostas'\\\">\\n      <ion-list>\\n        <ion-item-sliding *ngFor=\\\"let resposta of respostas\\\">\\n          <ion-item lines=\\\"inset\\\" button [routerLink]=\\\"['/professor-resposta/', resposta.id]\\\">\\n            <ion-label>{{ resposta.conteudo }}</ion-label>\\n          </ion-item>\\n          \\n          <ion-item-options side=\\\"end\\\">\\n            <ion-item-option (click)=\\\"onRemoveResposta(resposta.id)\\\" color=\\\"danger\\\">\\n              <ion-label>Apagar</ion-label>\\n            </ion-item-option>\\n          </ion-item-options>\\n        </ion-item-sliding>\\n      </ion-list>\\n      <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button [routerLink]=\\\"['/professor-resposta/questao', idQuestao]\\\" routerDirection=\\\"forward\\\">\\n          <ion-icon name=\\\"add\\\"></ion-icon>\\n        </ion-fab-button>\\n      </ion-fab>\\n    </div>\\n    \\n    <!-- <div *ngSwitchCase=\\\"'respostas'\\\">\\n      <ion-button horizontal=\\\"end\\\" slot=\\\"fixed\\\" [routerLink]=\\\"['/professor-resposta/questao', idQuestao]\\\" routerDirection=\\\"forward\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n      <ion-list>\\n        <ion-item-sliding *ngFor=\\\"let resposta of respostas\\\">\\n          <ion-card button [routerLink]=\\\"['/professor-resposta/', resposta.id]\\\">\\n            <ion-card-header>\\n              <ion-card-title *ngIf=\\\"resposta.correta\\\">Correta: Sim</ion-card-title>\\n              <ion-card-title *ngIf=\\\"!resposta.correta\\\">Correta: Não</ion-card-title>\\n            </ion-card-header>\\n            \\n            <ion-card-content>\\n              <p>Pontuação: {{resposta.pontuacao}}</p>\\n              <p>Conteúdo: {{resposta.conteudo}}</p>\\n            </ion-card-content>\\n            \\n            <ion-button end (click)=\\\"onRemoveResposta(resposta.id)\\\" style=\\\"float: right; margin-right: 2%\\\">Apagar</ion-button>\\n          </ion-card>\\n        </ion-item-sliding>\\n        <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n          <ion-fab-button [routerLink]=\\\"['/professor-resposta/questao', idQuestao]\\\" routerDirection=\\\"forward\\\">\\n            <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-fab-button>\\n        </ion-fab>\\n      </ion-list>\\n    </div> -->\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Zlc3Nvci1xdWVzdGFvLWVkaWNhby9wcm9mZXNzb3ItcXVlc3Rhby1lZGljYW8ucGFnZS5zY3NzIn0= */\"","import { NavController, LoadingController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { IQuestao } from 'src/app/models/questao';\nimport { Component, OnInit } from '@angular/core';\nimport { QuestaoService } from 'src/app/services/questao.service';\nimport { IResposta } from 'src/app/models/resposta';\nimport { RespostaService } from 'src/app/services/resposta.service';\nimport { forEach } from '@angular/router/src/utils/collection';\n\n@Component({\n  selector: 'app-professor-questao-edicao',\n  templateUrl: './professor-questao-edicao.page.html',\n  styleUrls: ['./professor-questao-edicao.page.scss'],\n})\nexport class ProfessorQuestaoEdicaoPage implements OnInit {\n\n  questao: IQuestao = {\n    atividade: null, //FK\n    apelido: '',\n    problema: '',\n    dataCriacao: new Date()\n  }\n\n  idQuestao = null;\n  respostas: IResposta[];\n  segmentQuestao = 'edicao';\n\n  constructor(private route: ActivatedRoute, private nav: NavController, \n    private loadingController: LoadingController, \n    private questaoService: QuestaoService, private respostaService: RespostaService) { }\n\n    ngOnInit() {\n      this.idQuestao = this.route.snapshot.params['id'];\n\n      if(this.idQuestao) {\n        this.load();\n\n        this.respostaService.getByQuestao(this.idQuestao).subscribe((resultado) => {\n          this.respostas = resultado;\n        });\n      }\n    }\n\n    async load() {\n      const loading = await this.loadingController.create({\n        message: 'Carregando'\n      });\n      await loading.present();\n\n      this.questaoService.get(this.idQuestao).subscribe(resultado => {\n        loading.dismiss();\n\n        this.questao = resultado;\n      });\n    }\n\n    async save() {\n      const loading = await this.loadingController.create({\n        message: 'Salvando'\n      });\n      await loading.present();\n\n      if (this.idQuestao){\n        this.questaoService.update(this.idQuestao, this.questao).then(() => {\n          loading.dismiss();\n\n          this.nav.navigateForward('/professor-atividade-edicao/' + this.questao.atividade);\n        });\n      }\n    }\n\n    async onRemove(id: string) {\n      //Não funciona\n      this.respostaService.getByQuestaoComID(id).then((resultado) => {\n        console.log('resposta', resultado[0].id);\n        this.respostaService.remove(resultado[0].id);\n      });\n\n      this.questaoService.remove(id);\n    }\n\n    async onRemoveResposta(id: string) {\n      this.respostaService.remove(id);\n    }\n}\n","import { map } from 'rxjs/operators';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Injectable } from '@angular/core';\nimport { IQuestao } from '../models/questao';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestaoService {\n\n  private collectionQuestoes: AngularFirestoreCollection<IQuestao>;\n  private listQuestoes: Observable<IQuestao[]>;\n\n  constructor(private db: AngularFirestore) { \n    this.collectionQuestoes = db.collection<IQuestao>('questoes');\n    this.listQuestoes = this.collectionQuestoes.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getAll() {\n    return this.listQuestoes;\n  }\n\n  get(id: string) {\n    return this.collectionQuestoes.doc<IQuestao>(id).valueChanges();\n  }\n\n  getByAtividade(atividade: string) {\n    return this.db.collection<IQuestao>\n    ('questoes', ref => ref.where('atividade', '==', atividade).orderBy(\"dataCriacao\", \"desc\")).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getByAtividadeAsc(atividade: string) {\n    return this.db.collection<IQuestao>\n    ('questoes', ref => ref.where('atividade', '==', atividade).orderBy(\"dataCriacao\")).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  add(questao: IQuestao, atividade: string) {\n    questao.atividade = atividade;\n    return this.collectionQuestoes.add(questao);\n  }\n\n  update(id: string, questao: IQuestao) {\n    return this.collectionQuestoes.doc(id).update(questao);\n  }\n\n  remove(id: string) {\n    return this.collectionQuestoes.doc(id).delete();\n  }\n}\n\n","import { IAtividade } from './../models/atividade';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { AngularFirestoreCollection, AngularFirestore } from 'angularfire2/firestore';\nimport { Injectable } from '@angular/core';\nimport { IResposta } from '../models/resposta';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RespostaService {\n  \n  private collectionRespostas: AngularFirestoreCollection<IResposta>;\n  private listRespostas: Observable<IResposta[]>;\n  \n  constructor(private db: AngularFirestore) { \n    this.collectionRespostas = db.collection<IResposta>('respostas');\n    this.listRespostas = this.collectionRespostas.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      }));\n    }\n    \n    getAll() {\n      return this.listRespostas;\n    }\n    \n    // getByAtividade(atividade: string) {\n    \n    //   //Tentando buscar as respostas por referecia\n    //   // this.collectionRespostas.doc<IResposta>('atividades/' + atividade)\n    //   // .valueChanges().subscribe( r => console.log('resp', r));\n    \n    //   // return this.db.collection<IResposta>('respostas/atividades/' + atividade).\n    //   // snapshotChanges().pipe(\n    //   //   map(actions => {\n    //   //     return actions.map(a => {\n    //   //       const data = a.payload.doc.data();\n    //   //       const id = a.payload.doc.id;\n    //   //       return {id, ...data};\n    //   //     });\n    //   //   })\n    //   // );\n    \n    //   return this.db.collection<IResposta>('respostas', ref => ref.where('atividade', '==', atividade)).\n    //   snapshotChanges().pipe(\n    //     map(actions => {\n    //       return actions.map(a => {\n    //         const data = a.payload.doc.data();\n    //         const id = a.payload.doc.id;\n    //         return {id, ...data};\n    //       });\n    //     })\n    //   );\n    // }\n    \n    getByQuestao(questao: string) {\n      return this.db.collection<IResposta>('respostas', ref => ref.where('questao', '==', questao)).\n      snapshotChanges().pipe(\n        map(actions => {\n          return actions.map(a => {\n            const data = a.payload.doc.data();\n            const id = a.payload.doc.id;\n            return {id, ...data};\n          });\n        })\n        );\n      }\n      \n      getByQuestaoComID(questao: string) {\n        return new Promise(resolve => {\n          this.db.collection<IResposta>('respostas', ref => ref.where('questao', '==', questao)).\n          snapshotChanges().pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data();\n                const id = a.payload.doc.id;\n                return {id, ...data};\n              });\n            })).subscribe((data:any) => {\n              resolve(data);\n            });\n          });\n        }\n        \n        get(id: string) {\n          return this.collectionRespostas.doc<IResposta>(id).valueChanges();\n        }\n        \n        add(resposta: IResposta, questao: string) {\n          //Adicionada resposta com atividade por referecia (mas nao deu pra buscar)\n          //resposta.atividade = this.db.doc('atividades/' + atividade).ref;\n          resposta.questao = questao;\n          return this.collectionRespostas.add(resposta);\n        }\n        \n        update(id: string, resposta: IResposta) {\n          return this.collectionRespostas.doc(id).update(resposta);\n        }\n        \n        remove(id: string) {\n          return this.collectionRespostas.doc(id).delete();\n        }\n      }\n      \n      "],"sourceRoot":""}