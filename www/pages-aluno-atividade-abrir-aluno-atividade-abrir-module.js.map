{"version":3,"sources":["webpack:///./src/app/pages/aluno-atividade-abrir/aluno-atividade-abrir.module.ts","webpack:///./src/app/pages/aluno-atividade-abrir/aluno-atividade-abrir.page.html","webpack:///./src/app/pages/aluno-atividade-abrir/aluno-atividade-abrir.page.scss","webpack:///./src/app/pages/aluno-atividade-abrir/aluno-atividade-abrir.page.ts"],"names":[],"mappings":"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","file":"pages-aluno-atividade-abrir-aluno-atividade-abrir-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AlunoAtividadeAbrirPage } from './aluno-atividade-abrir.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AlunoAtividadeAbrirPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AlunoAtividadeAbrirPage]\n})\nexport class AlunoAtividadeAbrirPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"tertiary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/aluno-atividade/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ atividade.nome }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  \\n  <div id=\\\"div_aguarde\\\">\\n    <ion-label>Aguarde o professor iniciar a atividade</ion-label>\\n  </div>\\n  \\n  <div id=\\\"div_apresentacao\\\" style=\\\"visibility: hidden\\\">\\n    <ion-item *ngIf=\\\"questaoCorrente\\\" lines=\\\"none\\\">\\n      <ion-label>\\n        Quest√£o: {{ questaoCorrente.apelido }}\\n        <p>{{ questaoCorrente.problema }}</p>\\n      </ion-label>\\n    </ion-item>\\n    \\n    <ion-list>\\n      <ion-item-sliding *ngFor=\\\"let resposta of respostas\\\">\\n        <ion-card>\\n          <ion-card-content>\\n            {{resposta.conteudo}}\\n          </ion-card-content>\\n          <ion-button end (click)=\\\"votar(resposta.id, resposta)\\\" *ngIf=\\\"!alunoVotou\\\" style=\\\"float: right; margin-right: 2%\\\">Votar</ion-button>\\n        </ion-card>\\n      </ion-item-sliding>\\n    </ion-list>\\n  </div>\\n  \\n  <div id=\\\"div_atividadeFinalizada\\\" style=\\\"visibility: hidden;\\\">\\n    \\n    <ion-list lines=\\\"full\\\">\\n      <ion-item *ngIf=\\\"atividade\\\">\\n        <ion-label position=\\\"stacked\\\">Disciplina</ion-label>\\n        <ion-input disabled=\\\"true\\\" type=\\\"text\\\" [(ngModel)]=\\\"atividade.disciplina\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"atividade\\\">\\n        <ion-label position=\\\"stacked\\\">Atividade</ion-label>\\n        <ion-input disabled=\\\"true\\\" type=\\\"text\\\" [(ngModel)]=\\\"atividade.nome\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"atividade\\\">\\n        <ion-label position=\\\"stacked\\\">T√©rmino da atividade</ion-label>\\n        <ion-datetime disabled=\\\"true\\\" displayFormat=\\\"DD/MM/YYYY hh:mm\\\" [(ngModel)]=\\\"atividade.dataTermino\\\"></ion-datetime>\\n      </ion-item>\\n      \\n      <ion-list>\\n        <ion-list-header>\\n          <ion-label color=\\\"primary\\\">Quest√µes</ion-label>\\n        </ion-list-header>\\n        <ion-item-sliding *ngFor=\\\"let questao of questoesFinalizadas\\\">\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label>Quest√£o: {{questao.apelido}}</ion-label>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <p>Problema/Desafio: {{questao.problema}}</p>\\n          </ion-item>\\n          <ion-list>\\n            <ion-item-sliding *ngFor=\\\"let resposta of questao.respostas\\\">\\n              <ion-card>\\n                <ion-card-header>\\n                  <ion-card-title>\\n                    <ion-icon *ngIf=\\\"resposta.correta\\\" name=\\\"checkmark\\\"></ion-icon>\\n                    <ion-icon *ngIf=\\\"!resposta.correta\\\" name=\\\"close\\\"></ion-icon>\\n                    <ion-icon *ngIf=\\\"resposta.escolhida && resposta.correta\\\" name=\\\"done-all\\\" color=\\\"primary\\\"></ion-icon>\\n                    <ion-icon *ngIf=\\\"resposta.escolhida && !resposta.correta\\\" name=\\\"done-all\\\" color=\\\"danger\\\"></ion-icon>\\n                  </ion-card-title>\\n                </ion-card-header>\\n                \\n                <ion-card-content>\\n                  <p>{{resposta.conteudo}}</p>\\n                  <p>Pontua√ß√£o: {{resposta.pontuacao}}</p>\\n                </ion-card-content>\\n              </ion-card>\\n            </ion-item-sliding>\\n          </ion-list>\\n          <ion-item></ion-item>\\n        </ion-item-sliding>\\n      </ion-list>\\n    </ion-list>\\n  </div>\\n  <!-- <div padding>\\n    <ion-segment [(ngModel)]=\\\"segmentAtividade\\\" mode=\\\"ios\\\">\\n      <ion-segment-button value=\\\"edicao\\\">\\n        <ion-label>Informa√ß√µes</ion-label>\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"respostas\\\">\\n        <ion-label>Respostas</ion-label>\\n      </ion-segment-button>\\n    </ion-segment>\\n  </div>\\n  \\n  <div [ngSwitch]=\\\"segmentAtividade\\\">\\n    \\n    <div *ngSwitchCase=\\\"'edicao'\\\">\\n      <ion-list lines=\\\"full\\\">\\n        <ion-item *ngIf=\\\"atividade\\\">\\n          <ion-label position=\\\"stacked\\\">Nome</ion-label>\\n          <ion-input disabled=\\\"true\\\" type=\\\"text\\\" [(ngModel)]=\\\"atividade.nome\\\"></ion-input>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"atividade\\\">\\n          <ion-label position=\\\"stacked\\\">Problema/Desafio</ion-label>\\n          <ion-textarea disabled=\\\"true\\\" rows=\\\"4\\\" [(ngModel)]=\\\"atividade.nome\\\"></ion-textarea>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"atividade\\\">\\n          <ion-label position=\\\"stacked\\\">Termina em</ion-label>\\n          <ion-datetime disabled=\\\"true\\\" displayFormat=\\\"DD/MM/YYYY hh:mm\\\" [(ngModel)]=\\\"atividade.dataTermino\\\"></ion-datetime>\\n        </ion-item>\\n      </ion-list>\\n    </div>\\n    \\n    <div *ngSwitchCase=\\\"'respostas'\\\">\\n      <ion-list>\\n        <ion-item-sliding *ngFor=\\\"let resposta of respostas\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-title>Votos: {{resposta.votos}}</ion-card-title>\\n            </ion-card-header>\\n            \\n            <ion-card-content *ngIf=\\\"resposta.correta\\\" color=\\\"success\\\">\\n              {{resposta.conteudo}}\\n            </ion-card-content>\\n            \\n            <ion-card-content *ngIf=\\\"!resposta.correta\\\">\\n              {{resposta.conteudo}}\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-item-sliding>\\n      </ion-list>\\n    </div>\\n  </div> -->\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FsdW5vLWF0aXZpZGFkZS1hYnJpci9hbHVuby1hdGl2aWRhZGUtYWJyaXIucGFnZS5zY3NzIn0= */\"","import { ITurmaAlunoResposta } from './../../models/turma-aluno-resposta';\nimport { ITurma } from './../../models/turma';\nimport { QuestaoService } from 'src/app/services/questao.service';\nimport { IQuestao } from 'src/app/models/questao';\nimport { AlunoService } from './../../services/aluno.service';\nimport { AutenticacaoService } from './../../services/autenticacao.service';\nimport { IAtividade } from './../../models/atividade';\nimport { IResposta } from './../../models/resposta';\nimport { AtividadeService } from './../../services/atividade.service';\nimport { NavController, LoadingController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { RespostaService } from 'src/app/services/resposta.service';\nimport { TurmaAlunoService } from 'src/app/services/turma-aluno.service';\nimport { TurmaService } from 'src/app/services/turma.service';\nimport { TurmaAlunoRespostaService } from 'src/app/services/turma-aluno-resposta.service';\n\n@Component({\n  selector: 'app-aluno-atividade-abrir',\n  templateUrl: './aluno-atividade-abrir.page.html',\n  styleUrls: ['./aluno-atividade-abrir.page.scss'],\n})\nexport class AlunoAtividadeAbrirPage implements OnInit {\n  \n  atividade: IAtividade = {\n    id: '',\n    professor: '', //FK\n    disciplina: '',\n    nome: '',\n    dataTermino: new Date(),\n    dataCriacao: new Date()\n  }\n  \n  questaoCorrente: IQuestao = {\n    id: '',\n    atividade: null, //FK\n    apelido: '',\n    problema: '',\n    dataCriacao: new Date(),\n  }\n  \n  turma: ITurma = {\n    id: '',\n    atividade: '', //FK\n    nome: '',\n    token: '',\n    dataCriacao: new Date(),\n    atividadeIniciada: false,\n    atividadeFinalizada: false,\n    questaoAtual: ''\n  }\n  \n  turmaAlunoResp: ITurmaAlunoResposta = {\n    turma: '', //FK\n    turmaAluno: '', //FK\n    resposta: '' //FK\n  }\n  \n  usuarioCorrente = null;\n  idTurma = null;\n  questoesFinalizadas: Questao[] = [];\n  respostas: IResposta[] = [];\n  segmentAtividade = 'edicao';\n  alunoVotou: boolean = false;\n  \n  constructor(private route: ActivatedRoute, private nav: NavController, \n    private loadingController: LoadingController, private autenticacaoService: AutenticacaoService, \n    private atividadeService: AtividadeService, private turmaService: TurmaService,\n    private turmaAlunoService: TurmaAlunoService, private alunoService: AlunoService,\n    private questaoService: QuestaoService, private respostaService: RespostaService,\n    private turmaAlunoRespostaService: TurmaAlunoRespostaService) { }\n    \n    ngOnInit() {\n      this.idTurma = this.route.snapshot.params['turma'];\n      \n      if (this.idTurma) {\n        this.alunoVotou = false;\n        this.load();\n      }\n    }\n    \n    async load() {\n      const loading = await this.loadingController.create({\n        message: 'Carregando'\n      });\n      await loading.present();\n      \n      this.turmaService.get(this.idTurma).subscribe((turma) => {\n        this.atividadeService.get(turma.atividade).subscribe(atividade => {\n          loading.dismiss();\n          \n          this.atividade = atividade;\n          this.turma = turma;\n          this.usuarioCorrente = this.autenticacaoService.getID();\n          \n          if (turma.questaoAtual) {\n            document.getElementById('div_aguarde').style.display = \"none\";\n            document.getElementById('div_apresentacao').style.visibility = \"visible\";\n            \n            this.questaoService.get(turma.questaoAtual).subscribe((questao) => {\n              this.questaoCorrente = questao;\n              this.respostaService.getByQuestao(turma.questaoAtual).subscribe((respostas) => {\n                this.respostas = respostas;\n                \n                this.alunoService.getByUsuario(this.usuarioCorrente).then((aluno) =>{\n                  this.turmaAlunoService.getByTurmaAluno(this.idTurma, aluno[0].id)\n                  .subscribe((turmaAluno) => {\n                    this.alunoVotou = false;\n                    respostas.forEach(f => {\n                      this.turmaAlunoRespostaService.getByTurmaAlunoResposta(turmaAluno[0].id, f.id)\n                      .subscribe((resultado) => {\n                        //se j√° respondeu deixa o bot√£o 'Votar' bloqueado\n                        if (!this.alunoVotou) {\n                          this.alunoVotou = (resultado.length > 0);\n                        }\n                      });\n                    });\n                  });\n                });\n              });\n            });\n          } \n          else if (turma.atividadeFinalizada) {\n            document.getElementById('div_aguarde').style.display = \"none\";\n            document.getElementById('div_apresentacao').style.display = \"none\";\n            document.getElementById('div_atividadeFinalizada').style.visibility = \"visible\";\n            \n            this.alunoService.getByUsuario(this.usuarioCorrente).then((aluno) =>{\n              this.turmaAlunoService.getByTurmaAluno(this.idTurma, aluno[0].id)\n              .subscribe((turmaAluno) => {\n                this.questaoService.getByAtividadeAsc(turma.atividade).subscribe((questoes) => {\n                  questoes.forEach(f => {\n                    if (this.questoesFinalizadas.findIndex(c => c.id == f.id) < 0) {\n                      let quest = new Questao();\n                      quest.id = f.id;\n                      quest.apelido = f.apelido;\n                      quest.problema = f.problema;\n                      \n                      this.respostaService.getByQuestao(f.id).subscribe((respostas) => {\n                        respostas.forEach(fr => {\n                          \n                          if (quest.respostas.findIndex(c => c.id == fr.id) < 0) {\n                            let resp = new Resposta();\n                            resp.id = fr.id;\n                            resp.correta = fr.correta;\n                            resp.conteudo = fr.conteudo;\n                            resp.pontuacao = fr.pontuacao;\n                            resp.escolhida = false;\n                            \n                            this.turmaAlunoRespostaService.getByTurmaAlunoRespostaPromise(turmaAluno[0].id, fr.id).then((resultado) => {\n                              if (resultado[0]) {\n                                resp.escolhida = true;\n                              }\n                            });\n                            quest.respostas.push(resp);\n                          }\n                        });\n                      });\n                      \n                      this.questoesFinalizadas.push(quest);\n                    }\n                  });\n                });\n              });\n            });\n          }\n        });\n      });\n    }\n    \n    async votar(idResposta: string, resposta: IResposta) {\n      //criar um registro na tabela turma-aluno-respostas\n      //guardar a pontua√ß√£o na tabela turma-aluno\n      const loading = await this.loadingController.create({\n        message: 'Enviando'\n      });\n      await loading.present();\n\n      this.usuarioCorrente = this.autenticacaoService.getID();\n      this.alunoService.getByUsuario(this.usuarioCorrente).then((aluno) =>{\n        this.turmaAlunoService.getByTurmaAluno(this.idTurma, aluno[0].id)\n        .subscribe((turmaAluno) => {\n          this.turmaAlunoRespostaService.getByTurmaAlunoResposta(turmaAluno[0].id, idResposta)\n          .subscribe((turmaResposta) => {\n            if (turmaResposta.length <= 0) {\n              \n              this.turmaAlunoResp.resposta = idResposta;\n              this.turmaAlunoResp.turmaAluno = turmaAluno[0].id;\n              this.turmaAlunoResp.turma = turmaAluno[0].turma;\n              this.turmaAlunoRespostaService.add(this.turmaAlunoResp).then(() => {\n                \n                turmaAluno[0].alunoPontuacao += resposta.pontuacao;\n                this.turmaAlunoService.update(turmaAluno[0].id, turmaAluno[0]).then(() =>{\n                  \n                  aluno[0].pontuacao += resposta.pontuacao;\n                  aluno[0].nivel = Math.floor(aluno[0].pontuacao / 100);\n                  \n                  this.alunoService.update(aluno[0].id, aluno[0]).then(() => {\n                    loading.dismiss();\n                  });\n                });\n              });\n            }\n          });\n        });\n      });\n    }\n  }\n  \n  export class Questao {\n    id: string;\n    apelido: string;\n    problema: string;\n    respostas: Resposta[] = [];\n    \n    public Questao() {\n      this.id = '';\n      this.apelido = '';\n      this.problema = '';\n      this.respostas = [];\n    }\n  }\n  \n  export class Resposta {\n    id: string;\n    correta: boolean;\n    conteudo: string;\n    pontuacao: number;\n    escolhida: boolean;\n    \n    public Resposta() {\n      this.id = '';\n      this.correta = false;\n      this.conteudo = '';\n      this.pontuacao = 0;\n      this.escolhida = false;\n    }\n  }"],"sourceRoot":""}