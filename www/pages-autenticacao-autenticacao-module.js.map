{"version":3,"sources":["webpack:///./src/app/pages/autenticacao/autenticacao.module.ts","webpack:///./src/app/pages/autenticacao/autenticacao.page.html","webpack:///./src/app/pages/autenticacao/autenticacao.page.scss","webpack:///./src/app/pages/autenticacao/autenticacao.page.ts"],"names":[],"mappings":"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","file":"pages-autenticacao-autenticacao-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AutenticacaoPage } from './autenticacao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AutenticacaoPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AutenticacaoPage]\n})\nexport class AutenticacaoPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Login\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  \\n  <form #form=\\\"ngForm\\\" novalidate>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label stacked>E-mail</ion-label>\\n        <ion-input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"usuario.email\\\" #email=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"email.errors && (email.dirty || email.touched)\\\" class=\\\"text-danger\\\">\\n        O campo é obrigatório\\n      </ion-item>\\n      \\n      <ion-item>\\n        <ion-label stacked>Senha</ion-label>\\n        <ion-input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"usuario.senha\\\" #password=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\" class=\\\"text-danger\\\">\\n        O campo é obrigatório\\n      </ion-item>\\n    </ion-list>\\n    \\n    <ion-button color=\\\"primary\\\" expand=\\\"full\\\" [disabled]=\\\"!form.form.valid\\\" (click)=\\\"signIn()\\\">Entrar</ion-button>\\n    <ion-button color=\\\"primary\\\" expand=\\\"full\\\" (click)=\\\"createAccount()\\\">Criar conta</ion-button>\\n  </form>\\n  \\n  <ion-button block clear expand=\\\"full\\\" (click)=\\\"resetPassword()\\\">Esqueci minha senha</ion-button>\\n  \\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGVudGljYWNhby9hdXRlbnRpY2FjYW8ucGFnZS5zY3NzIn0= */\"","import { ActivatedRoute } from '@angular/router';\nimport { Usuario } from './../../models/usuario';\nimport { AutenticacaoService } from './../../services/autenticacao.service';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-autenticacao',\n  templateUrl: './autenticacao.page.html',\n  styleUrls: ['./autenticacao.page.scss'],\n})\nexport class AutenticacaoPage implements OnInit {\n  \n  usuario: Usuario = new Usuario();\n  @ViewChild('form') form: NgForm;\n  \n  tipoUsuario = null;\n  \n  constructor(private route: ActivatedRoute,\n    public nav: NavController,\n    private toastController: ToastController,\n    private autenticacaoService: AutenticacaoService) {\n    }\n    \n    ngOnInit(){ \n      this.tipoUsuario = this.route.snapshot.params['tipo'];\n    }\n    \n    resetPassword() {\n      this.nav.navigateForward('/autenticacao-resetar-senha');\n    }\n    \n    async signIn() {\n      if (this.form.form.valid) {\n        let toastMessage = '';\n        \n        this.autenticacaoService.signIn(this.usuario)\n        .then(() => {\n          if (this.tipoUsuario == 'aluno') {\n            this.nav.navigateForward('/aluno-inicio');\n          } else if (this.tipoUsuario == 'professor') {\n            this.nav.navigateForward('/professor-inicio');\n          }\n        })\n        .catch((error: any) => {\n          if (error.code == 'auth/invalid-email') {\n            toastMessage = 'O e-mail digitado não é valido.';\n          } else if (error.code == 'auth/user-disabled') {\n            toastMessage = 'O usuário está desativado.';\n          } else if (error.code == 'auth/user-not-found') {\n            toastMessage = 'O usuário não foi encontrado.';\n          } else if (error.code == 'auth/wrong-password') {\n            toastMessage = 'A senha digitada não é valida.';\n          }\n          \n          this.presentToast(toastMessage);\n        });\n      }\n    }\n    \n    createAccount() {\n      this.nav.navigateForward('/autenticacao-criar-conta/' + this.tipoUsuario);\n    }\n    \n    async presentToast(message: string) {\n      const toast = await this.toastController.create({\n        message: message,\n        duration: 3000,\n        position: 'bottom'\n      });\n      toast.present();\n    }\n  }"],"sourceRoot":""}