{"version":3,"sources":["webpack:///./src/app/pages/autenticacao-criar-conta/autenticacao-criar-conta.module.ts","webpack:///./src/app/pages/autenticacao-criar-conta/autenticacao-criar-conta.page.html","webpack:///./src/app/pages/autenticacao-criar-conta/autenticacao-criar-conta.page.scss","webpack:///./src/app/pages/autenticacao-criar-conta/autenticacao-criar-conta.page.ts"],"names":[],"mappings":"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","file":"pages-autenticacao-criar-conta-autenticacao-criar-conta-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AutenticacaoCriarContaPage } from './autenticacao-criar-conta.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AutenticacaoCriarContaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AutenticacaoCriarContaPage]\n})\nexport class AutenticacaoCriarContaPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Criar conta\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form #form=\\\"ngForm\\\" novalidate>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label stacked>Nome completo</ion-label>\\n        <ion-input type=\\\"text\\\" name=\\\"nome\\\" [(ngModel)]=\\\"nomeCompleto\\\" #nome=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"nome.errors && (nome.dirty || nome.touched)\\\" class=\\\"text-danger\\\">\\n        O campo é obrigatório\\n      </ion-item>\\n      \\n      <ion-item>\\n        <ion-label stacked>E-mail</ion-label>\\n        <ion-input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"usuario.email\\\" #email=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"email.errors && (email.dirty || email.touched)\\\" class=\\\"text-danger\\\">\\n        O campo é obrigatório\\n      </ion-item>\\n      \\n      <ion-item>\\n        <ion-label stacked>Senha</ion-label>\\n        <ion-input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"usuario.senha\\\" #password=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\" class=\\\"text-danger\\\">\\n        O campo é obrigatório\\n      </ion-item>\\n    </ion-list>\\n    <ion-button color=\\\"primary\\\" expand=\\\"full\\\" [disabled]=\\\"!form.form.valid\\\" (click)=\\\"createAccount()\\\">\\n      Criar conta\\n    </ion-button>\\n  </form>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGVudGljYWNhby1jcmlhci1jb250YS9hdXRlbnRpY2FjYW8tY3JpYXItY29udGEucGFnZS5zY3NzIn0= */\"","import { NgForm } from '@angular/forms';\nimport { Usuario } from 'src/app/models/usuario';\nimport { IAluno } from './../../models/aluno';\nimport { IProfessor } from 'src/app/models/professor';\nimport { AlunoService } from './../../services/aluno.service';\nimport { AutenticacaoService } from './../../services/autenticacao.service';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProfessorService } from 'src/app/services/professor.service';\n\n@Component({\n  selector: 'app-autenticacao-criar-conta',\n  templateUrl: './autenticacao-criar-conta.page.html',\n  styleUrls: ['./autenticacao-criar-conta.page.scss'],\n})\nexport class AutenticacaoCriarContaPage implements OnInit {\n\n  usuario: Usuario = new Usuario();\n  @ViewChild('form') form: NgForm;\n  \n  aluno: IAluno = {\n    usuario: '',\n    nomeCompleto: '',\n    imagem: 'capivara.jpg',\n    nivel: 0,\n    pontuacao: 0,\n  }\n\n  professor: IProfessor = {\n    usuario: '',\n    nomeCompleto: '',\n    imagem: '',\n  }\n  \n  tipoUsuario = null;\n  nomeCompleto = null;\n\n  constructor(private route: ActivatedRoute,\n    public nav: NavController,\n    private toastController: ToastController,\n    private autenticacaoService: AutenticacaoService,\n    private alunoService: AlunoService,\n    private professorService: ProfessorService) {\n    }\n\n  ngOnInit() {\n    this.tipoUsuario = this.route.snapshot.params['tipo'];\n  }\n\n  createAccount() {\n    if (this.form.form.valid) {\n      let toastMessage = '';\n      \n      this.autenticacaoService.createUser(this.usuario)\n      .then((usuario: any) => {\n        //usuario.sendEmailVerification();\n        \n        //Após criar o usuário, cria o aluno/professor e faz ligação com o usuário\n        if (this.tipoUsuario == 'aluno') {\n          this.aluno.usuario = this.autenticacaoService.getID();\n          this.aluno.nomeCompleto = this.nomeCompleto;\n          this.aluno.imagem = this.getRandomInt(1, 40) + '.jpg';\n          this.alunoService.add(this.aluno).then(() => {\n            this.nav.navigateForward('/aluno-inicio');\n          });\n        } else if (this.tipoUsuario == 'professor') {\n          this.professor.usuario = this.autenticacaoService.getID();\n          this.professor.nomeCompleto = this.nomeCompleto;\n          this.professorService.add(this.professor).then(() => {\n            this.nav.navigateForward('/professor-inicio');\n          });\n        }\n      })\n      .catch((error: any) => {\n        if (error.code  == 'auth/email-already-in-use') {\n          toastMessage = 'O e-mail digitado já existe.';\n        } else if (error.code  == 'auth/invalid-email') {\n          toastMessage = 'O e-mail digitado não é valido.';\n        } else if (error.code  == 'auth/operation-not-allowed') {\n          toastMessage = 'Não está habilitado criar usuários.';\n        } else if (error.code  == 'auth/weak-password') {\n          toastMessage = 'A senha digitada é muito fraca.';\n        } else {\n          toastMessage = error.message;\n        }\n        \n        this.presentToast(toastMessage);\n      });\n    }\n  }\n\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000,\n      position: 'bottom'\n    });\n    toast.present();\n  }\n\n  getRandomInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n}\n"],"sourceRoot":""}