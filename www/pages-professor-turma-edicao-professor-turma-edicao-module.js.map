{"version":3,"sources":["webpack:///./src/app/pages/professor-turma-edicao/professor-turma-edicao.module.ts","webpack:///./src/app/pages/professor-turma-edicao/professor-turma-edicao.page.html","webpack:///./src/app/pages/professor-turma-edicao/professor-turma-edicao.page.scss","webpack:///./src/app/pages/professor-turma-edicao/professor-turma-edicao.page.ts","webpack:///./src/app/services/turma.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAE4B;AAEzE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qFAAwB;KACpC;CACF,CAAC;AAWF;IAAA;IAA6C,CAAC;IAAjC,8BAA8B;QAT1C,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qFAAwB,CAAC;SACzC,CAAC;OACW,8BAA8B,CAAG;IAAD,qCAAC;CAAA;AAAH;;;;;;;;;;;;ACzB3C,stCAAstC,sBAAsB,sEAAsE,mBAAmB,mH;;;;;;;;;;;ACAr0C,+DAA+D,2L;;;;;;;;;;;;;;;;;;;;;;;ACAD;AACW;AACP;AACjB;AAEC;AACY;AAO9D;IAeE,kCAAoB,KAAqB,EAAU,GAAkB,EAC3D,iBAAoC,EAAU,YAA0B,EACxE,iBAAoC,EAAU,YAA0B;QAF9D,UAAK,GAAL,KAAK,CAAgB;QAAU,QAAG,GAAH,GAAG,CAAe;QAC3D,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QACxE,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAflF,UAAK,GAAW;YACd,SAAS,EAAE,EAAE;YACb,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,IAAI,IAAI,EAAE;YACvB,iBAAiB,EAAE,KAAK;YACxB,mBAAmB,EAAE,KAAK;YAC1B,YAAY,EAAE,IAAI;SACnB;QAED,YAAO,GAAG,IAAI,CAAC;QACf,WAAM,GAAY,EAAE,CAAC;IAIiE,CAAC;IAErF,2CAAQ,GAAR;QAAA,iBAqBC;QApBC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEhD,IAAG,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,IAAI,EAAE,CAAC;YAEZ,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;iBAC9C,SAAS,CAAC,UAAC,SAAS;gBACnB,SAAS,CAAC,OAAO,CAAC,WAAC;oBACjB,YAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;wBAEhD,IAAI,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAZ,CAAY,CAAC,GAAG,CAAC,EAAE;4BAChD,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;4BACxB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;4BAChB,KAAK,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;4BAC3C,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,cAAc,CAAC;4BACnC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBACzB;oBACH,CAAC,CAAC;gBATF,CASE,CAAC,CAAC;YACR,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAEK,uCAAI,GAAV;;;;;;4BACkB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;4BAClD,OAAO,EAAE,YAAY;yBACtB,CAAC;;wBAFI,OAAO,GAAG,SAEd;wBACF,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;wBAExB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,mBAAS;4BACrD,OAAO,CAAC,OAAO,EAAE,CAAC;4BAElB,KAAI,CAAC,KAAK,GAAG,SAAS,CAAC;wBACzB,CAAC,CAAC,CAAC;;;;;KACJ;IArDQ,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,kJAAiD;;SAElD,CAAC;+EAgB2B,8DAAc,EAAe,4DAAa;YACxC,gEAAiB,EAAwB,2EAAY;YACrD,sFAAiB,EAAwB,oEAAY;OAjBvE,wBAAwB,CAsDlC;IAAD,+BAAC;CAAA;AAtDkC;AAwDnC;IAAA;IAUA,CAAC;IALQ,qBAAK,GAAZ;QACE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;IACH,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;AC/EkC;AACiD;AAC3C;AAO3C;IAKE,sBAAoB,EAAoB;QAApB,OAAE,GAAF,EAAE,CAAkB;QACtC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,UAAU,CAAS,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,IAAI,CAC5D,0DAAG,CAAC,iBAAO;YACT,OAAO,OAAO,CAAC,GAAG,CAAC,WAAC;gBAClB,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBAClC,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC5B,OAAO,iDAAC,EAAE,QAAK,IAAI,EAAE;YACvB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,6BAAM,GAAN;QACE,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,0BAAG,GAAH,UAAI,EAAU;QACZ,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAS,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC;IAC9D,CAAC;IAED,qCAAc,GAAd,UAAe,SAAiB;QAC9B,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CACxB,QAAQ,EAAE,aAAG,IAAI,UAAG,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,EAAtE,CAAsE,CAAC;YACzF,eAAe,EAAE,CAAC,IAAI,CACpB,0DAAG,CAAC,iBAAO;YACT,OAAO,OAAO,CAAC,GAAG,CAAC,WAAC;gBAClB,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBAClC,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC5B,OAAO,iDAAC,EAAE,QAAK,IAAI,EAAE;YACvB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,4CAAqB,GAArB,UAAsB,SAAiB;QAAvC,iBAgBC;QAfC,OAAO,IAAI,OAAO,CAAC,iBAAO;YAC1B,KAAI,CAAC,EAAE,CAAC,UAAU,CACjB,QAAQ,EAAE,aAAG,IAAI,UAAG,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,EAAtE,CAAsE,CAAC;gBACzF,eAAe,EAAE,CAAC,IAAI,CACpB,0DAAG,CAAC,iBAAO;gBACT,OAAO,OAAO,CAAC,GAAG,CAAC,WAAC;oBAClB,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;oBAClC,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;oBAC5B,OAAO,iDAAC,EAAE,QAAK,IAAI,EAAE;gBACvB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,UAAC,IAAQ;gBACnB,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACH,CAAC;IAED,mDAA4B,GAA5B,UAA6B,SAAiB;QAC5C,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CACxB,QAAQ,EAAE,aAAG,IAAI,UAAG,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,CAAC;YACzD,KAAK,CAAC,qBAAqB,EAAE,IAAI,EAAE,KAAK,CAAC;YACzC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,EAFZ,CAEY,CAAC;YAC/B,eAAe,EAAE,CAAC,IAAI,CACpB,0DAAG,CAAC,iBAAO;YACT,OAAO,OAAO,CAAC,GAAG,CAAC,WAAC;gBAClB,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBAClC,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC5B,OAAO,iDAAC,EAAE,QAAK,IAAI,EAAE;YACvB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,iCAAU,GAAV,UAAW,KAAa;QACtB,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CACxB,QAAQ,EAAE,aAAG,IAAI,UAAG,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,EAA/B,CAA+B,CAAC;YAClD,eAAe,EAAE,CAAC,IAAI,CACpB,0DAAG,CAAC,iBAAO;YACT,OAAO,OAAO,CAAC,GAAG,CAAC,WAAC;gBAClB,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBAClC,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC5B,OAAO,iDAAC,EAAE,QAAK,IAAI,EAAE;YACvB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,0BAAG,GAAH,UAAI,KAAa,EAAE,SAAiB;QAClC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,6BAAM,GAAN,UAAO,EAAU,EAAE,KAAa;QAC9B,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,6BAAM,GAAN,UAAO,EAAU;QACf,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;IAChD,CAAC;IAnGU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAMwB,uEAAgB;OAL7B,YAAY,CAoGxB;IAAD,mBAAC;CAAA;AApGwB","file":"pages-professor-turma-edicao-professor-turma-edicao-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfessorTurmaEdicaoPage } from './professor-turma-edicao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfessorTurmaEdicaoPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProfessorTurmaEdicaoPage]\n})\nexport class ProfessorTurmaEdicaoPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"tertiary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button [defaultHref]=\\\"['/professor-atividade-edicao/', turma.atividade]\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Turma</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list lines=\\\"full\\\">\\n    <ion-item *ngIf=\\\"turma\\\">\\n      <ion-label position=\\\"stacked\\\">Nome</ion-label>\\n      <ion-input disabled=\\\"true\\\" type=\\\"text\\\" max-length=\\\"10\\\" [(ngModel)]=\\\"turma.nome\\\"></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"turma\\\">\\n      <ion-label position=\\\"stacked\\\">Token</ion-label>\\n      <ion-input disabled=\\\"true\\\" type=\\\"text\\\" max-length=\\\"10\\\" [(ngModel)]=\\\"turma.token\\\"></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"turma\\\">\\n      <ion-label>Turma já fez a atividade</ion-label>\\n      <ion-checkbox disabled=\\\"true\\\" type=\\\"text\\\" [(ngModel)]=\\\"turma.atividadeFinalizada\\\"></ion-checkbox>\\n    </ion-item>\\n    \\n    <ion-list>\\n      <ion-list-header>\\n        <ion-label color=\\\"primary\\\">Aluno | Pontuação</ion-label>\\n      </ion-list-header>\\n      <ion-item-sliding *ngFor=\\\"let aluno of alunos\\\">\\n        <ion-item>\\n          <ion-label>{{ aluno.nomeCompleto }}</ion-label>\\n          <ion-badge color=\\\"secondary\\\" slot=\\\"end\\\">{{ aluno.pontuacao }}</ion-badge>\\n        </ion-item>\\n      </ion-item-sliding>    \\n    </ion-list>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Zlc3Nvci10dXJtYS1lZGljYW8vcHJvZmVzc29yLXR1cm1hLWVkaWNhby5wYWdlLnNjc3MifQ== */\"","import { AlunoService } from './../../services/aluno.service';\nimport { TurmaAlunoService } from 'src/app/services/turma-aluno.service';\nimport { NavController, LoadingController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { ITurma } from './../../models/turma';\nimport { Component, OnInit } from '@angular/core';\nimport { TurmaService } from 'src/app/services/turma.service';\n\n@Component({\n  selector: 'app-professor-turma-edicao',\n  templateUrl: './professor-turma-edicao.page.html',\n  styleUrls: ['./professor-turma-edicao.page.scss'],\n})\nexport class ProfessorTurmaEdicaoPage implements OnInit {\n  \n  turma: ITurma = {\n    atividade: '', //FK\n    nome: '',\n    token: '',\n    dataCriacao: new Date(),\n    atividadeIniciada: false,\n    atividadeFinalizada: false,\n    questaoAtual: null\n  }\n  \n  idTurma = null;\n  alunos: Aluno[] = [];\n  \n  constructor(private route: ActivatedRoute, private nav: NavController, \n    private loadingController: LoadingController, private turmaService: TurmaService,\n    private turmaAlunoService: TurmaAlunoService, private alunoService: AlunoService) { }\n    \n    ngOnInit() {\n      this.idTurma = this.route.snapshot.params['id'];\n      \n      if(this.idTurma) {\n        this.load();\n\n        this.turmaAlunoService.getByTurma(this.idTurma)\n        .subscribe((resultado) => {\n          resultado.forEach(f => \n            this.alunoService.get(f.aluno).subscribe((resAluno) => { \n              \n              if (this.alunos.findIndex(v => v.id == f.id) < 0) {\n                let aluno = new Aluno();\n                aluno.id = f.id;\n                aluno.nomeCompleto = resAluno.nomeCompleto;\n                aluno.pontuacao = f.alunoPontuacao;\n                this.alunos.push(aluno);\n              }\n            }));\n        });\n      }\n    }\n    \n    async load() {\n      const loading = await this.loadingController.create({\n        message: 'Carregando'\n      });\n      await loading.present();\n      \n      this.turmaService.get(this.idTurma).subscribe(resultado => {\n        loading.dismiss();\n        \n        this.turma = resultado;\n      });\n    }\n  }\n\n  export class Aluno {\n    id: string;\n    nomeCompleto: string;\n    pontuacao: number;\n    \n    public Aluno() {\n      this.id = '';\n      this.nomeCompleto = '';\n      this.pontuacao = 0;\n    }\n  }\n  ","import { map } from 'rxjs/operators';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Injectable } from '@angular/core';\nimport { ITurma } from '../models/turma';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TurmaService {\n\n  private collectionTurmas: AngularFirestoreCollection<ITurma>;\n  private listTurmas: Observable<ITurma[]>;\n\n  constructor(private db: AngularFirestore) { \n    this.collectionTurmas = db.collection<ITurma>('turmas');\n    this.listTurmas = this.collectionTurmas.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getAll() {\n    return this.listTurmas;\n  }\n\n  get(id: string) {\n    return this.collectionTurmas.doc<ITurma>(id).valueChanges();\n  }\n\n  getByAtividade(atividade: string) {\n    return this.db.collection<ITurma>\n    ('turmas', ref => ref.where('atividade', '==', atividade).orderBy(\"dataCriacao\", \"desc\")).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getByAtividadePromise(atividade: string) {\n    return new Promise(resolve => {\n    this.db.collection<ITurma>\n    ('turmas', ref => ref.where('atividade', '==', atividade).orderBy(\"dataCriacao\", \"desc\")).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    ).subscribe((data:any) => {\n      resolve(data);\n    });\n  });\n  }\n\n  getByAtividadeNaoFinalizadas(atividade: string) {\n    return this.db.collection<ITurma>\n    ('turmas', ref => ref.where('atividade', '==', atividade).\n    where('atividadeFinalizada', '==', false).\n    orderBy(\"dataCriacao\", \"desc\")).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getByToken(token: string) {\n    return this.db.collection<ITurma>\n    ('turmas', ref => ref.where('token', '==', token)).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  add(turma: ITurma, atividade: string) {\n    turma.atividade = atividade;\n    return this.collectionTurmas.add(turma);\n  }\n\n  update(id: string, turma: ITurma) {\n    return this.collectionTurmas.doc(id).update(turma);\n  }\n\n  remove(id: string) {\n    return this.collectionTurmas.doc(id).delete();\n  }\n}\n"],"sourceRoot":""}