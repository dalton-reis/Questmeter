{"version":3,"sources":["webpack:///./src/app/services/atividade.service.ts","webpack:///./src/app/services/questao.service.ts","webpack:///./src/app/services/resposta.service.ts","webpack:///./src/app/services/turma-aluno-resposta.service.ts","webpack:///./src/app/services/turma.service.ts"],"names":[],"mappings":"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","file":"default~pages-aluno-atividade-abrir-aluno-atividade-abrir-module~pages-professor-atividade-apresenta~bd8a083d.js","sourcesContent":["import { IAtividade } from './../models/atividade';\nimport { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AtividadeService {\n\n  private collectionAtividades: AngularFirestoreCollection<IAtividade>;\n  private listAtividades: Observable<IAtividade[]>;\n\n  constructor(private db: AngularFirestore) { \n    this.collectionAtividades = db.collection<IAtividade>('atividades');\n    this.listAtividades = this.collectionAtividades.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getAll() {\n    return this.listAtividades;\n  }\n\n  get(id: string) {\n    return this.collectionAtividades.doc<IAtividade>(id).valueChanges();\n  }\n\n  //modificar: pegar a atividade que o aluno pertence\n  getByCodigo(codigo: string) {\n    return new Promise(resolve => {\n      this.db.collection<IAtividade>('atividades', ref => ref.where('codigo', '==', codigo)).\n      snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })).subscribe((data:any) => {\n          resolve(data);\n      });\n    });\n  }\n\n  getByProfessor(professor: string) {\n    return this.db.collection<IAtividade>\n    ('atividades', ref => ref.where('professor', '==', professor).orderBy(\"disciplina\").orderBy(\"nome\")).\n      snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n    }));\n  }\n\n  getByProfessorOrdenaPorData(professor: string) {\n    return this.db.collection<IAtividade>\n    ('atividades', ref => ref.where('professor', '==', professor).orderBy(\"dataCriacao\", \"desc\")).\n      snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n    }));\n  }\n\n  add(atividade: IAtividade) {\n    return this.collectionAtividades.add(atividade);\n  }\n\n  update(id: string, atividade: IAtividade) {\n    return this.collectionAtividades.doc(id).update(atividade);\n  }\n\n  remove(id: string) {\n    return this.collectionAtividades.doc(id).delete();\n  }\n}\n","import { map } from 'rxjs/operators';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Injectable } from '@angular/core';\nimport { IQuestao } from '../models/questao';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestaoService {\n\n  private collectionQuestoes: AngularFirestoreCollection<IQuestao>;\n  private listQuestoes: Observable<IQuestao[]>;\n\n  constructor(private db: AngularFirestore) { \n    this.collectionQuestoes = db.collection<IQuestao>('questoes');\n    this.listQuestoes = this.collectionQuestoes.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getAll() {\n    return this.listQuestoes;\n  }\n\n  get(id: string) {\n    return this.collectionQuestoes.doc<IQuestao>(id).valueChanges();\n  }\n\n  getByAtividade(atividade: string) {\n    return this.db.collection<IQuestao>\n    ('questoes', ref => ref.where('atividade', '==', atividade).orderBy(\"dataCriacao\", \"desc\")).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getByAtividadeAsc(atividade: string) {\n    return this.db.collection<IQuestao>\n    ('questoes', ref => ref.where('atividade', '==', atividade).orderBy(\"dataCriacao\")).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  add(questao: IQuestao, atividade: string) {\n    questao.atividade = atividade;\n    return this.collectionQuestoes.add(questao);\n  }\n\n  update(id: string, questao: IQuestao) {\n    return this.collectionQuestoes.doc(id).update(questao);\n  }\n\n  remove(id: string) {\n    return this.collectionQuestoes.doc(id).delete();\n  }\n}\n\n","import { IAtividade } from './../models/atividade';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { AngularFirestoreCollection, AngularFirestore } from 'angularfire2/firestore';\nimport { Injectable } from '@angular/core';\nimport { IResposta } from '../models/resposta';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RespostaService {\n  \n  private collectionRespostas: AngularFirestoreCollection<IResposta>;\n  private listRespostas: Observable<IResposta[]>;\n  \n  constructor(private db: AngularFirestore) { \n    this.collectionRespostas = db.collection<IResposta>('respostas');\n    this.listRespostas = this.collectionRespostas.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      }));\n    }\n    \n    getAll() {\n      return this.listRespostas;\n    }\n    \n    // getByAtividade(atividade: string) {\n    \n    //   //Tentando buscar as respostas por referecia\n    //   // this.collectionRespostas.doc<IResposta>('atividades/' + atividade)\n    //   // .valueChanges().subscribe( r => console.log('resp', r));\n    \n    //   // return this.db.collection<IResposta>('respostas/atividades/' + atividade).\n    //   // snapshotChanges().pipe(\n    //   //   map(actions => {\n    //   //     return actions.map(a => {\n    //   //       const data = a.payload.doc.data();\n    //   //       const id = a.payload.doc.id;\n    //   //       return {id, ...data};\n    //   //     });\n    //   //   })\n    //   // );\n    \n    //   return this.db.collection<IResposta>('respostas', ref => ref.where('atividade', '==', atividade)).\n    //   snapshotChanges().pipe(\n    //     map(actions => {\n    //       return actions.map(a => {\n    //         const data = a.payload.doc.data();\n    //         const id = a.payload.doc.id;\n    //         return {id, ...data};\n    //       });\n    //     })\n    //   );\n    // }\n    \n    getByQuestao(questao: string) {\n      return this.db.collection<IResposta>('respostas', ref => ref.where('questao', '==', questao)).\n      snapshotChanges().pipe(\n        map(actions => {\n          return actions.map(a => {\n            const data = a.payload.doc.data();\n            const id = a.payload.doc.id;\n            return {id, ...data};\n          });\n        })\n        );\n      }\n      \n      getByQuestaoComID(questao: string) {\n        return new Promise(resolve => {\n          this.db.collection<IResposta>('respostas', ref => ref.where('questao', '==', questao)).\n          snapshotChanges().pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data();\n                const id = a.payload.doc.id;\n                return {id, ...data};\n              });\n            })).subscribe((data:any) => {\n              resolve(data);\n            });\n          });\n        }\n        \n        get(id: string) {\n          return this.collectionRespostas.doc<IResposta>(id).valueChanges();\n        }\n        \n        add(resposta: IResposta, questao: string) {\n          //Adicionada resposta com atividade por referecia (mas nao deu pra buscar)\n          //resposta.atividade = this.db.doc('atividades/' + atividade).ref;\n          resposta.questao = questao;\n          return this.collectionRespostas.add(resposta);\n        }\n        \n        update(id: string, resposta: IResposta) {\n          return this.collectionRespostas.doc(id).update(resposta);\n        }\n        \n        remove(id: string) {\n          return this.collectionRespostas.doc(id).delete();\n        }\n      }\n      \n      ","import { map } from 'rxjs/operators';\nimport { ITurmaAlunoResposta } from './../models/turma-aluno-resposta';\nimport { Observable } from 'rxjs';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TurmaAlunoRespostaService {\n  \n  private collectionTurmaAlunoRespostas: AngularFirestoreCollection<ITurmaAlunoResposta>;\n  private listTurmaAlunoRespostas: Observable<ITurmaAlunoResposta[]>;\n  \n  constructor(private db: AngularFirestore) { \n    this.collectionTurmaAlunoRespostas = db.collection<ITurmaAlunoResposta>('turma-aluno-respostas');\n    this.listTurmaAlunoRespostas = this.collectionTurmaAlunoRespostas.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n      );\n    }\n    \n    getAll() {\n      return this.listTurmaAlunoRespostas;\n    }\n    \n    get(id: string) {\n      return this.collectionTurmaAlunoRespostas.doc<ITurmaAlunoResposta>(id).valueChanges();\n    }\n    \n    getByTurma(turma: string) {\n      return this.db.collection<ITurmaAlunoResposta>('turma-aluno-respostas', \n      ref => ref.where('turma', '==', turma)).\n      snapshotChanges().pipe(\n        map(actions => {\n          return actions.map(a => {\n            const data = a.payload.doc.data();\n            const id = a.payload.doc.id;\n            return {id, ...data};\n          });\n        }));\n      }\n      \n      getByTurmaAluno(turmaAluno: string) {\n        return this.db.collection<ITurmaAlunoResposta>('turma-aluno-respostas', \n        ref => ref.where('turmaAluno', '==', turmaAluno)).\n        snapshotChanges().pipe(\n          map(actions => {\n            return actions.map(a => {\n              const data = a.payload.doc.data();\n              const id = a.payload.doc.id;\n              return {id, ...data};\n            });\n          }));\n        }\n        \n        getByTurmaAlunoResposta(turmaAluno: string, resposta: string) {\n          return this.db.collection<ITurmaAlunoResposta>('turma-aluno-respostas', \n          ref => ref.where('turmaAluno', '==', turmaAluno).\n          where('resposta', '==', resposta)).\n          snapshotChanges().pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data();\n                const id = a.payload.doc.id;\n                return {id, ...data};\n              });\n            }));\n          }\n          \n          getByTurmaAlunoRespostaPromise(turmaAluno: string, resposta: string) {\n            return new Promise(resolve => {\n              this.db.collection<ITurmaAlunoResposta>('turma-aluno-respostas', \n              ref => ref.where('turmaAluno', '==', turmaAluno).\n              where('resposta', '==', resposta)).\n              snapshotChanges().pipe(\n                map(actions => {\n                  return actions.map(a => {\n                    const data = a.payload.doc.data();\n                    const id = a.payload.doc.id;\n                    return {id, ...data};\n                  });\n                })).subscribe((data:any) => {\n                  resolve(data);\n                });\n              });\n            }\n            \n            getByResposta(resposta: string) {\n              return this.db.collection<ITurmaAlunoResposta>('turma-aluno-respostas', \n              ref => ref.where('resposta', '==', resposta)).\n              snapshotChanges().pipe(\n                map(actions => {\n                  return actions.map(a => {\n                    const data = a.payload.doc.data();\n                    const id = a.payload.doc.id;\n                    return {id, ...data};\n                  });\n                }));\n              }\n              \n              add(turmaAlunoResposta: ITurmaAlunoResposta) {\n                return this.collectionTurmaAlunoRespostas.add(turmaAlunoResposta);\n              }\n              \n              update(id: string, turmaAlunoResposta: ITurmaAlunoResposta) {\n                return this.collectionTurmaAlunoRespostas.doc(id).update(turmaAlunoResposta);\n              }\n              \n              remove(id: string) {\n                return this.collectionTurmaAlunoRespostas.doc(id).delete();\n              }\n            }\n            ","import { map } from 'rxjs/operators';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Injectable } from '@angular/core';\nimport { ITurma } from '../models/turma';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TurmaService {\n\n  private collectionTurmas: AngularFirestoreCollection<ITurma>;\n  private listTurmas: Observable<ITurma[]>;\n\n  constructor(private db: AngularFirestore) { \n    this.collectionTurmas = db.collection<ITurma>('turmas');\n    this.listTurmas = this.collectionTurmas.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getAll() {\n    return this.listTurmas;\n  }\n\n  get(id: string) {\n    return this.collectionTurmas.doc<ITurma>(id).valueChanges();\n  }\n\n  getByAtividade(atividade: string) {\n    return this.db.collection<ITurma>\n    ('turmas', ref => ref.where('atividade', '==', atividade).orderBy(\"dataCriacao\", \"desc\")).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getByAtividadePromise(atividade: string) {\n    return new Promise(resolve => {\n    this.db.collection<ITurma>\n    ('turmas', ref => ref.where('atividade', '==', atividade).orderBy(\"dataCriacao\", \"desc\")).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    ).subscribe((data:any) => {\n      resolve(data);\n    });\n  });\n  }\n\n  getByAtividadeNaoFinalizadas(atividade: string) {\n    return this.db.collection<ITurma>\n    ('turmas', ref => ref.where('atividade', '==', atividade).\n    where('atividadeFinalizada', '==', false).\n    orderBy(\"dataCriacao\", \"desc\")).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  getByToken(token: string) {\n    return this.db.collection<ITurma>\n    ('turmas', ref => ref.where('token', '==', token)).\n    snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return {id, ...data};\n        });\n      })\n    );\n  }\n\n  add(turma: ITurma, atividade: string) {\n    turma.atividade = atividade;\n    return this.collectionTurmas.add(turma);\n  }\n\n  update(id: string, turma: ITurma) {\n    return this.collectionTurmas.doc(id).update(turma);\n  }\n\n  remove(id: string) {\n    return this.collectionTurmas.doc(id).delete();\n  }\n}\n"],"sourceRoot":""}