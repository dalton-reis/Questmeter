{"version":3,"sources":["webpack:///./src/app/pages/professor-atividade-edicao/professor-atividade-edicao.module.ts","webpack:///./src/app/pages/professor-atividade-edicao/professor-atividade-edicao.page.html","webpack:///./src/app/pages/professor-atividade-edicao/professor-atividade-edicao.page.scss","webpack:///./src/app/pages/professor-atividade-edicao/professor-atividade-edicao.page.ts"],"names":[],"mappings":"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","file":"pages-professor-atividade-edicao-professor-atividade-edicao-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfessorAtividadeEdicaoPage } from './professor-atividade-edicao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfessorAtividadeEdicaoPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProfessorAtividadeEdicaoPage]\n})\nexport class ProfessorAtividadeEdicaoPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/professor-atividade/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Atividade</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  \\n  <div padding>\\n    <!-- <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"dogs\\\" mode=\\\"ios\\\"> -->\\n      <ion-segment [(ngModel)]=\\\"segmentAtividade\\\" mode=\\\"ios\\\">\\n        <ion-segment-button value=\\\"edicao\\\">\\n          <ion-label>Informações</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"respostas\\\">\\n          <ion-label>Respostas</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"alunos\\\">\\n          <ion-label>Alunos</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n    </div>\\n    \\n    <div [ngSwitch]=\\\"segmentAtividade\\\">\\n      \\n      <div *ngSwitchCase=\\\"'edicao'\\\">\\n        <ion-list lines=\\\"full\\\">\\n          <ion-item *ngIf=\\\"atividade\\\">\\n            <ion-label position=\\\"stacked\\\">Nome</ion-label>\\n            <ion-input required type=\\\"text\\\" [(ngModel)]=\\\"atividade.nome\\\"></ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"atividade\\\">\\n            <ion-label position=\\\"stacked\\\">Problema/Desafio</ion-label>\\n            <ion-textarea required rows=\\\"4\\\" [(ngModel)]=\\\"atividade.problema\\\"></ion-textarea>\\n          </ion-item>\\n          <!-- <ion-item *ngIf=\\\"atividade\\\">\\n            <ion-select required placeholder=\\\"Tipo\\\" [(ngModel)]=\\\"atividade.tipo\\\">\\n              <ion-select-option value=\\\"M\\\">Multipla escolha</ion-select-option>\\n              <ion-select-option value=\\\"D\\\">Descritiva</ion-select-option>\\n            </ion-select>\\n          </ion-item> -->\\n          <ion-item *ngIf=\\\"atividade\\\">\\n            <ion-label position=\\\"stacked\\\">Termina em</ion-label>\\n            <ion-datetime required displayFormat=\\\"DD/MM/YYYY hh:mm\\\" [(ngModel)]=\\\"atividade.dataTermino\\\"></ion-datetime>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"atividade\\\">\\n            <ion-label position=\\\"stacked\\\">Código</ion-label>\\n            <ion-input type=\\\"text\\\" disabled=\\\"true\\\" [(ngModel)]=\\\"atividade.codigo\\\"></ion-input>\\n          </ion-item>\\n        </ion-list>\\n        <ion-button expand=\\\"full\\\" (click)=\\\"save()\\\">Salvar</ion-button>\\n        <ion-button expand=\\\"full\\\" (click)=\\\"gerarCodigoTurma()\\\">Gerar código turma</ion-button>\\n        <ion-button expand=\\\"full\\\" (click)=\\\"apresentar()\\\">Apresentar</ion-button>\\n        <!-- <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" color=\\\"danger\\\">\\n          <ion-fab-button color=\\\"danger\\\" (click)=\\\"onRemoveAtividade(idAtividade)\\\" routerLink=\\\"/\\\" \\n          routerDirection=\\\"forward\\\">\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\n        </ion-fab-button>\\n      </ion-fab> -->\\n    </div>\\n    \\n    <div *ngSwitchCase=\\\"'respostas'\\\">\\n      <ion-list>\\n        <ion-list-header>\\n          <ion-label color=\\\"primary\\\">Respostas/Votos</ion-label>\\n        </ion-list-header>\\n        <ion-item-sliding *ngFor=\\\"let resposta of respostas\\\">\\n          <ion-item lines=\\\"inset\\\" button [routerLink]=\\\"['/professor-resposta', resposta.id]\\\">\\n            <ion-label>{{ resposta.conteudo }}</ion-label>\\n            <ion-badge color=\\\"secondary\\\" slot=\\\"end\\\">{{ resposta.votos }}</ion-badge>\\n          </ion-item>\\n          \\n          <ion-item-options side=\\\"end\\\">\\n            <ion-item-option (click)=\\\"onRemoveResposta(resposta.id)\\\" color=\\\"danger\\\">\\n              <ion-label>Apagar</ion-label>\\n              <!-- <ion-icon name=\\\"trash\\\" slot=\\\"end\\\"></ion-icon> -->\\n            </ion-item-option>\\n          </ion-item-options>\\n        </ion-item-sliding>\\n      </ion-list>\\n      <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button [routerLink]=\\\"['/professor-resposta/atividade', idAtividade]\\\" routerDirection=\\\"forward\\\">\\n          <ion-icon name=\\\"add\\\"></ion-icon>\\n        </ion-fab-button>\\n      </ion-fab>\\n    </div>\\n    \\n    <div *ngSwitchCase=\\\"'alunos'\\\">\\n      <ion-item-sliding *ngFor=\\\"let aluno of alunos\\\">\\n        <ion-item>\\n          <ion-label>{{ aluno.nomeCompleto }}</ion-label>\\n          <ion-badge color=\\\"secondary\\\" slot=\\\"end\\\">{{ aluno.pontuacao }}</ion-badge>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </div>\\n    \\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Zlc3Nvci1hdGl2aWRhZGUtZWRpY2FvL3Byb2Zlc3Nvci1hdGl2aWRhZGUtZWRpY2FvLnBhZ2Uuc2NzcyJ9 */\"","import { AlunoService } from './../../services/aluno.service';\nimport { AtividadeAlunoService } from './../../services/atividade-aluno.service';\nimport { AtividadeService } from './../../services/atividade.service';\nimport { NavController, LoadingController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { IResposta } from './../../models/resposta';\nimport { IAtividade } from './../../models/atividade';\nimport { Component, OnInit } from '@angular/core';\nimport { RespostaService } from 'src/app/services/resposta.service';\n\n@Component({\n  selector: 'app-professor-atividade-edicao',\n  templateUrl: './professor-atividade-edicao.page.html',\n  styleUrls: ['./professor-atividade-edicao.page.scss'],\n})\nexport class ProfessorAtividadeEdicaoPage implements OnInit {\n  \n  atividade: IAtividade = {\n    nome: '',\n    professor: '', //FK\n    problema: '',\n    tipo: '',\n    dataTermino: new Date(),\n    iniciada: false,\n    codigo: ''\n  }\n\n  idAtividade= null;\n  respostas: IResposta[];\n  alunos: Aluno[] = [];\n  segmentAtividade = 'edicao';\n  \n  constructor(private route: ActivatedRoute, private nav: NavController, \n    private loadingController: LoadingController,\n    private atividadeService: AtividadeService, private respostaService: RespostaService,\n    private atividadeAlunoService: AtividadeAlunoService, private alunoService: AlunoService) { }\n    \n    ngOnInit() {\n      this.idAtividade = this.route.snapshot.params['id'];\n      if(this.idAtividade) {\n        this.load();\n        \n        this.respostaService.getByAtividade(this.idAtividade).subscribe((resultado) => {\n          this.respostas = resultado;\n        });\n        \n        this.atividadeAlunoService.getByAtividade(this.idAtividade)\n        .subscribe((resultado) => {\n          resultado.forEach(f => \n            this.alunoService.get(f.aluno).subscribe((resAluno) => { \n              \n              if (this.alunos.findIndex(v => v.id == f.id) < 0) {\n                let aluno = new Aluno();\n                aluno.id = f.id;\n                aluno.nomeCompleto = resAluno.nomeCompleto;\n                aluno.pontuacao = f.alunoPontuacao;\n                this.alunos.push(aluno);\n              }\n            }));\n        });\n      }\n    }\n    \n    async load() {\n      const loading = await this.loadingController.create({\n        message: 'Carregando'\n      });\n      await loading.present();\n      \n      this.atividadeService.get(this.idAtividade).subscribe(resultado => {\n        loading.dismiss();\n        \n        this.atividade = resultado;\n      });\n    }\n    \n    async save() {\n      const loading = await this.loadingController.create({\n        message: 'Salvando'\n      });\n      await loading.present();\n      \n      if (this.idAtividade){\n        this.atividadeService.update(this.idAtividade, this.atividade).then(() => {\n          loading.dismiss();\n          \n          this.nav.navigateForward('/professor-inicio');\n        });\n      } else {\n        this.atividadeService.add(this.atividade).then(() => {\n          loading.dismiss();\n          \n          this.nav.navigateForward('/professor-inicio');\n        });\n      }\n    }\n    \n    async onRemoveAtividade(id: string) {\n      this.atividadeService.remove(id);\n    }\n    \n    async onRemoveResposta(id: string) {\n      this.atividadeService.remove(id);\n    }\n    \n    async gerarCodigoTurma() {\n      if (this.idAtividade) {\n        const loading = await this.loadingController.create({\n          message: 'Salvando'\n        });\n        await loading.present();\n        \n        let codigo = this.idAtividade.substring(0, 7);\n        this.atividade.codigo = codigo.toString().toUpperCase();\n        \n        this.atividadeService.update(this.idAtividade, this.atividade).then(() => {\n          loading.dismiss();\n        });\n      }\n    }\n\n    apresentar() {\n      this.nav.navigateForward('/professor-atividade-apresentacao/' + this.idAtividade);\n    }\n  }\n\nexport class Aluno {\n  id: string;\n  nomeCompleto: string;\n  pontuacao: number;\n\n  public Aluno() {\n    this.id = '';\n    this.nomeCompleto = '';\n    this.pontuacao = 0;\n  }\n}\n  "],"sourceRoot":""}