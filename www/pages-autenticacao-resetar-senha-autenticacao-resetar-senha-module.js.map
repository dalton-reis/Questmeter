{"version":3,"sources":["webpack:///./src/app/pages/autenticacao-resetar-senha/autenticacao-resetar-senha.module.ts","webpack:///./src/app/pages/autenticacao-resetar-senha/autenticacao-resetar-senha.page.html","webpack:///./src/app/pages/autenticacao-resetar-senha/autenticacao-resetar-senha.page.scss","webpack:///./src/app/pages/autenticacao-resetar-senha/autenticacao-resetar-senha.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEoC;AAEjF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6FAA4B;KACxC;CACF,CAAC;AAWF;IAAA;IAAiD,CAAC;IAArC,kCAAkC;QAT9C,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,6FAA4B,CAAC;SAC7C,CAAC;OACW,kCAAkC,CAAG;IAAD,yCAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/C,kyB;;;;;;;;;;;ACAA,+DAA+D,mM;;;;;;;;;;;;;;;;;;;;ACAa;AACZ;AACxB;AACqB;AAO7D;IAKE,sCACS,GAAkB,EACjB,eAAgC,EAChC,mBAAwC;QAFzC,QAAG,GAAH,GAAG,CAAe;QACjB,oBAAe,GAAf,eAAe,CAAiB;QAChC,wBAAmB,GAAnB,mBAAmB,CAAqB;QANlD,cAAS,GAAW,EAAE,CAAC;IAOvB,CAAC;IAED,+CAAQ,GAAR;IACA,CAAC;IAED,oDAAa,GAAb;QAAA,iBAkBC;QAjBC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACxB,IAAI,cAAY,GAAG,EAAE,CAAC;YAEtB,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC;iBACnD,IAAI,CAAC;gBACJ,KAAI,CAAC,GAAG,CAAC,eAAe,CAAC,yBAAyB,CAAC,CAAC;YACtD,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAU;gBAChB,IAAI,KAAK,CAAC,IAAI,IAAI,oBAAoB,EAAE;oBACtC,cAAY,GAAG,iCAAiC,CAAC;iBAClD;qBAAM,IAAI,KAAK,CAAC,IAAI,IAAI,qBAAqB,EAAE;oBAC9C,cAAY,GAAG,+BAA+B,CAAC;iBAChD;gBAED,KAAI,CAAC,YAAY,CAAC,cAAY,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAEK,mDAAY,GAAlB,UAAmB,OAAe;;;;;4BAClB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,OAAO,EAAE,OAAO;4BAChB,QAAQ,EAAE,IAAI;4BACd,QAAQ,EAAE,QAAQ;yBACnB,CAAC;;wBAJI,KAAK,GAAG,SAIZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACjB;IAtCkB;QAAlB,+DAAS,CAAC,MAAM,CAAC;wEAAO,qDAAM;8DAAC;IAHrB,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,gCAAgC;YAC1C,8JAAqD;;SAEtD,CAAC;+EAOc,4DAAa;YACA,8DAAe;YACX,kFAAmB;OARvC,4BAA4B,CA0CxC;IAAD,mCAAC;CAAA;AA1CwC","file":"pages-autenticacao-resetar-senha-autenticacao-resetar-senha-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AutenticacaoResetarSenhaPage } from './autenticacao-resetar-senha.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AutenticacaoResetarSenhaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AutenticacaoResetarSenhaPage]\n})\nexport class AutenticacaoResetarSenhaPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"tertiary\\\">\\n    <ion-title>\\n      Resetar minha senha\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form #form=\\\"ngForm\\\" novalidate>\\n    <ion-list>\\n      \\n      <ion-item>\\n        <ion-label stacked>E-mail</ion-label>\\n        <ion-input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"userEmail\\\" #email=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"email.errors && (email.dirty || email.touched)\\\" class=\\\"text-danger\\\">\\n        O campo é obrigatório\\n      </ion-item>\\n      \\n    </ion-list>\\n    \\n    <ion-button block color=\\\"primary\\\" [disabled]=\\\"!form.form.valid\\\" (click)=\\\"resetPassword()\\\">\\n      Resetar minha senha\\n    </ion-button>\\n  </form>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGVudGljYWNhby1yZXNldGFyLXNlbmhhL2F1dGVudGljYWNhby1yZXNldGFyLXNlbmhhLnBhZ2Uuc2NzcyJ9 */\"","import { AutenticacaoService } from './../../services/autenticacao.service';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-autenticacao-resetar-senha',\n  templateUrl: './autenticacao-resetar-senha.page.html',\n  styleUrls: ['./autenticacao-resetar-senha.page.scss'],\n})\nexport class AutenticacaoResetarSenhaPage implements OnInit {\n\n  userEmail: string = '';\n  @ViewChild('form') form: NgForm;\n\n  constructor(\n    public nav: NavController,\n    private toastController: ToastController,\n    private autenticacaoService: AutenticacaoService) {\n  }\n\n  ngOnInit() {\n  }\n\n  resetPassword() {\n    if (this.form.form.valid) {\n      let toastMessage = '';\n\n      this.autenticacaoService.resetPassword(this.userEmail)\n        .then(() => {\n          this.nav.navigateForward('/autenticacao/professor');\n        })\n        .catch((error: any) => {\n          if (error.code == 'auth/invalid-email') {\n            toastMessage = 'O e-mail digitado não é valido.';\n          } else if (error.code == 'auth/user-not-found') {\n            toastMessage = 'O usuário não foi encontrado.';\n          }\n\n          this.presentToast(toastMessage);\n        });\n    }\n  }\n\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000,\n      position: 'bottom'\n    });\n    toast.present();\n  }\n}\n"],"sourceRoot":""}